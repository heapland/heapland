# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="dfsef#33sfsefsef@112rgdgf"
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"


db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost:8032/localgiga"
db.default.username=giga-admin
db.default.password=pgpass

db.default.poolInitialSize=5
db.default.poolMaxSize=10
db.default.poolConnectionTimeoutMillis=3000
db.default.poolValidationQuery="select 1 as one"
db.default.poolFactoryName="commons-dbcp2"

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"
scalikejdbc.global.loggingSQLErrors=true
scalikejdbc.global.loggingSQLAndTime.enabled=true
scalikejdbc.global.loggingSQLAndTime.singleLineMode=true
scalikejdbc.global.loggingSQLAndTime.logLevel=info
scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=100
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn
# The application DI modules
# ~~~~~

play.modules {
  enabled += "play.filters.csrf.CSRFModule"
  enabled += "play.filters.cors.CORSModule"
  enabled += "play.filters.csp.CSPModule"
  enabled += "play.filters.headers.SecurityHeadersModule"
  enabled += "play.filters.hosts.AllowedHostsModule"
  enabled += "play.filters.gzip.GzipFilterModule"
  enabled += "play.filters.https.RedirectHttpsModule"
  enabled += "scalikejdbc.PlayModule"
  enabled += "org.flywaydb.play.PlayModule"
  enabled += "modules.HeaplandModule"
  enabled += "play.api.libs.mailer.MailerModule"
}
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

play.filters.cors {
  allowedOrigins = ["http://localhost:3000"]
  allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
}


#Flyway configuration
db.default.migration.schemas=["public"]
db.default.migration.baselineOnMigrate=true
db.default.migration.initOnMigrate=true
db.default.migration.showInsertQuery=true
db.default.migration.auto=true
db.default.migration.table="schema_version"
# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
  libsodium = "server/lib/libsodium.dylib"
}


play.cache.bindCaches = ["job-cache", "session-cache", "workspace-keypairs"]
play.cache.caffeine.defaults = {
  initial-capacity = 200
}
events.maxTimeInSecs=1800
metrics.maxTimeInSecs=1800
logs.maxTimeInSecs=1800
app.timeLimit=1800
cluster.idleTimeout=120
# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner

}

# Play mailer
play.mailer {
  host = "localhost"
  port = 2500
  mock = false
  tls = false
  tlsRequired = false
}

heapland {
  packages = ${?HOME}
  images = ${?HOME}/heapland/images
  tmp = ${?HOME}/heapland/tmp
}

play.filters {

  csrf {

    # Token configuration
    token {

      # Whether tokens should be signed or not
      sign = true
    }

    # Cookie configuration
    cookie {

      name = "PLAY_CSRF_TOKEN"

      # Whether the cookie should be set to secure
      secure = ${play.http.session.secure}

      # Whether the cookie should have the HTTP only flag set
      httpOnly = false
    }
  }

}

play.http.parser.maxMemoryBuffer = 10MB
play.server.http.port=9001
play.filters.csrf.bypassCorsTrustedOrigins = false
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]
# Security Filter Configuration - Content Security Policy
play.filters.csp {
  CSPFilter = "default-src 'self';"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
  CSPFilter = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}

include "silhouette.conf"
